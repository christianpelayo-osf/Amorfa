<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <actionCalls>
        <name>Capture_Payment</name>
        <label>Capture Payment</label>
        <locationX>242</locationX>
        <locationY>768</locationY>
        <actionName>OSF_StripeCaptureV2Invocable</actionName>
        <actionType>apex</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>paymentRecordId</name>
            <value>
                <elementReference>Create_Payment_Record</elementReference>
            </value>
        </inputParameters>
    </actionCalls>
    <apiVersion>56.0</apiVersion>
    <decisions>
        <name>Check_If_Can_Auto_Capture</name>
        <label>Check If Can Auto Capture</label>
        <locationX>374</locationX>
        <locationY>528</locationY>
        <defaultConnectorLabel>Not Eligible For Auto Capture</defaultConnectorLabel>
        <rules>
            <name>Can_Auto_Capture</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Payment_Authorization_Record.GatewayResultCode</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>200 OK</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Get_Payment_Authorization_Record.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Processed</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Get_Payment_Authorization_Record.Amount</leftValueReference>
                <operator>GreaterThan</operator>
                <rightValue>
                    <numberValue>0.0</numberValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Get_Payment_Authorization_Record.GatewayAuthCode</leftValueReference>
                <operator>NotEqualTo</operator>
            </conditions>
            <connector>
                <targetReference>Create_Payment_Record</targetReference>
            </connector>
            <label>Eligible For Auto Capture</label>
        </rules>
    </decisions>
    <description>A new order summary will automatically capture the associated Stripe Payment. This updated version has been refactored to take in a Payment record which the Capture will utilise.</description>
    <environments>Default</environments>
    <formulas>
        <name>now</name>
        <dataType>DateTime</dataType>
        <expression>now()</expression>
    </formulas>
    <interviewLabel>Order Summary: Capture Stripe Payment v2 {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Order Summary: Capture Stripe Payment v2</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordCreates>
        <name>Create_Payment_Record</name>
        <label>Create Payment Record</label>
        <locationX>242</locationX>
        <locationY>648</locationY>
        <connector>
            <targetReference>Capture_Payment</targetReference>
        </connector>
        <inputAssignments>
            <field>Amount</field>
            <value>
                <elementReference>Get_Payment_Authorization_Record.Amount</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>CurrencyIsoCode</field>
            <value>
                <elementReference>Get_Payment_Authorization_Record.CurrencyIsoCode</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Date</field>
            <value>
                <elementReference>now</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>EffectiveDate</field>
            <value>
                <elementReference>now</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>OrderPaymentSummaryId</field>
            <value>
                <elementReference>Get_Payment_Authorization_Record.OrderPaymentSummaryId</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>PaymentAuthorizationId</field>
            <value>
                <elementReference>Get_Payment_Authorization_Record.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>PaymentGroupId</field>
            <value>
                <elementReference>Get_Payment_Authorization_Record.PaymentGroupId</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>PaymentMethodId</field>
            <value>
                <elementReference>Get_Payment_Authorization_Record.PaymentMethodId</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>ProcessingMode</field>
            <value>
                <stringValue>External</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Status</field>
            <value>
                <stringValue>Draft</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Type</field>
            <value>
                <stringValue>Capture</stringValue>
            </value>
        </inputAssignments>
        <object>Payment</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordLookups>
        <name>Get_Order_Payment_Summary_Record</name>
        <label>Get Order Payment Summary Record</label>
        <locationX>374</locationX>
        <locationY>288</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Get_Payment_Authorization_Record</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>OrderSummaryId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>OrderPaymentSummary</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Payment_Authorization_Record</name>
        <label>Get Payment Authorization Record</label>
        <locationX>374</locationX>
        <locationY>408</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Check_If_Can_Auto_Capture</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>OrderPaymentSummaryId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Get_Order_Payment_Summary_Record.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>PaymentAuthorization</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <start>
        <locationX>50</locationX>
        <locationY>0</locationY>
        <object>OrderSummary</object>
        <recordTriggerType>Create</recordTriggerType>
        <scheduledPaths>
            <connector>
                <targetReference>Get_Order_Payment_Summary_Record</targetReference>
            </connector>
            <pathType>AsyncAfterCommit</pathType>
        </scheduledPaths>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Active</status>
</Flow>
