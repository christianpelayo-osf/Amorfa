<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <actionCalls>
        <name>Process_Stripe_Refund</name>
        <label>Process Stripe Refund</label>
        <locationX>50</locationX>
        <locationY>878</locationY>
        <actionName>OSF_StripeRefundInvocable</actionName>
        <actionType>apex</actionType>
        <flowTransactionModel>Automatic</flowTransactionModel>
        <inputParameters>
            <name>paymentRecordId</name>
            <value>
                <elementReference>inputPaymentRecordtoRefundList.firstSelectedRow.Id</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>refundRecordId</name>
            <value>
                <elementReference>Create_Refund_Record</elementReference>
            </value>
        </inputParameters>
    </actionCalls>
    <apiVersion>56.0</apiVersion>
    <assignments>
        <name>Set_Count_Of_Payment_Records</name>
        <label>Set Count Of Payment Records</label>
        <locationX>182</locationX>
        <locationY>398</locationY>
        <assignmentItems>
            <assignToReference>countOfPaymentRecords</assignToReference>
            <operator>AssignCount</operator>
            <value>
                <elementReference>Get_Payment_Records</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Check_If_Payments_Exists</targetReference>
        </connector>
    </assignments>
    <decisions>
        <name>Check_If_Payments_Exists</name>
        <label>Check If Payments Exists</label>
        <locationX>182</locationX>
        <locationY>518</locationY>
        <defaultConnector>
            <targetReference>No_Payments_Screen</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>No Payments Exist</defaultConnectorLabel>
        <rules>
            <name>Payments_Exists</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>countOfPaymentRecords</leftValueReference>
                <operator>GreaterThan</operator>
                <rightValue>
                    <numberValue>0.0</numberValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Payments_Selection_Screen</targetReference>
            </connector>
            <label>Payments Exists</label>
        </rules>
    </decisions>
    <description>Enables a refund to be processed based on Payments captured on an Order Summary Record</description>
    <environments>Default</environments>
    <formulas>
        <name>now</name>
        <dataType>DateTime</dataType>
        <expression>NOW()</expression>
    </formulas>
    <interviewLabel>OrderSummary: Refund Stripe Payment {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Order Summary: Refund Stripe Payment Screenflow</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>Flow</processType>
    <recordCreates>
        <name>Create_Refund_Record</name>
        <label>Create Refund Record</label>
        <locationX>50</locationX>
        <locationY>758</locationY>
        <connector>
            <targetReference>Process_Stripe_Refund</targetReference>
        </connector>
        <inputAssignments>
            <field>Amount</field>
            <value>
                <elementReference>inputRefundAmount</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>CurrencyIsoCode</field>
            <value>
                <elementReference>inputPaymentRecordtoRefundList.firstSelectedRow.CurrencyIsoCode</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Date</field>
            <value>
                <elementReference>now</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>OrderPaymentSummaryId</field>
            <value>
                <elementReference>inputPaymentRecordtoRefundList.firstSelectedRow.OrderPaymentSummaryId</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>PaymentGroupId</field>
            <value>
                <elementReference>inputPaymentRecordtoRefundList.firstSelectedRow.PaymentGroupId</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>ProcessingMode</field>
            <value>
                <stringValue>External</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Status</field>
            <value>
                <stringValue>Draft</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Type</field>
            <value>
                <stringValue>Referenced</stringValue>
            </value>
        </inputAssignments>
        <object>Refund</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordLookups>
        <name>Get_Order_Payment_Summary_Record</name>
        <label>Get Order Payment Summary Record</label>
        <locationX>182</locationX>
        <locationY>158</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Get_Payment_Records</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>OrderSummaryId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>recordId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>OrderPaymentSummary</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Payment_Records</name>
        <label>Get Payment Records</label>
        <locationX>182</locationX>
        <locationY>278</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Set_Count_Of_Payment_Records</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>OrderPaymentSummaryId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Get_Order_Payment_Summary_Record.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>Payment</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <screens>
        <name>No_Payments_Screen</name>
        <label>No Payments Screen</label>
        <locationX>314</locationX>
        <locationY>638</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <fields>
            <name>invalidTextScreen</name>
            <fieldText>&lt;p&gt;No valid Payments are available for refunding.&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <nextOrFinishButtonLabel>Close</nextOrFinishButtonLabel>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <name>Payments_Selection_Screen</name>
        <label>Payments Selection Screen</label>
        <locationX>50</locationX>
        <locationY>638</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <connector>
            <targetReference>Create_Refund_Record</targetReference>
        </connector>
        <fields>
            <name>paymentRefundText</name>
            <fieldText>&lt;p&gt;Enter in the amount to refund on the Payment record.&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;The refund amount cannot be higher than the payment refund balance.&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <fields>
            <name>inputRefundAmount</name>
            <dataType>Currency</dataType>
            <defaultValue>
                <numberValue>0.0</numberValue>
            </defaultValue>
            <fieldText>Refund Amount</fieldText>
            <fieldType>InputField</fieldType>
            <isRequired>true</isRequired>
            <scale>2</scale>
            <validationRule>
                <errorMessage>&lt;p&gt;Refund value must be greater than 0 and be less than the balance of the selected payment.&lt;/p&gt;</errorMessage>
                <formulaExpression>{!inputRefundAmount} &gt; 0 &amp;&amp;
{!inputPaymentRecordtoRefundList.firstSelectedRow.Balance}  &gt;= {!inputRefundAmount}</formulaExpression>
            </validationRule>
        </fields>
        <fields>
            <name>inputPaymentRecordtoRefundList</name>
            <dataTypeMappings>
                <typeName>T</typeName>
                <typeValue>Payment</typeValue>
            </dataTypeMappings>
            <extensionName>flowruntime:datatable</extensionName>
            <fieldType>ComponentInstance</fieldType>
            <inputParameters>
                <name>label</name>
                <value>
                    <stringValue>Payments</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>selectionMode</name>
                <value>
                    <stringValue>SINGLE_SELECT</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>minRowSelection</name>
                <value>
                    <numberValue>1.0</numberValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>shouldDisplayLabel</name>
                <value>
                    <booleanValue>true</booleanValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>tableData</name>
                <value>
                    <elementReference>Get_Payment_Records</elementReference>
                </value>
            </inputParameters>
            <inputParameters>
                <name>columns</name>
                <value>
                    <stringValue>[{&quot;apiName&quot;:&quot;PaymentNumber&quot;,&quot;guid&quot;:&quot;column-dd54&quot;,&quot;editable&quot;:false,&quot;hasCustomHeaderLabel&quot;:false,&quot;customHeaderLabel&quot;:&quot;&quot;,&quot;wrapText&quot;:true,&quot;order&quot;:0,&quot;label&quot;:&quot;Payment Number&quot;,&quot;type&quot;:&quot;text&quot;},{&quot;apiName&quot;:&quot;Balance&quot;,&quot;guid&quot;:&quot;column-1621&quot;,&quot;editable&quot;:false,&quot;hasCustomHeaderLabel&quot;:false,&quot;customHeaderLabel&quot;:&quot;&quot;,&quot;wrapText&quot;:true,&quot;order&quot;:1,&quot;label&quot;:&quot;Balance&quot;,&quot;type&quot;:&quot;currency&quot;},{&quot;apiName&quot;:&quot;Amount&quot;,&quot;guid&quot;:&quot;column-28ee&quot;,&quot;editable&quot;:false,&quot;hasCustomHeaderLabel&quot;:false,&quot;customHeaderLabel&quot;:&quot;&quot;,&quot;wrapText&quot;:true,&quot;order&quot;:2,&quot;label&quot;:&quot;Amount&quot;,&quot;type&quot;:&quot;currency&quot;},{&quot;apiName&quot;:&quot;CurrencyIsoCode&quot;,&quot;guid&quot;:&quot;column-dd4e&quot;,&quot;editable&quot;:false,&quot;hasCustomHeaderLabel&quot;:false,&quot;customHeaderLabel&quot;:&quot;&quot;,&quot;wrapText&quot;:true,&quot;order&quot;:3,&quot;label&quot;:&quot;Currency ISO Code&quot;,&quot;type&quot;:&quot;text&quot;},{&quot;apiName&quot;:&quot;Status&quot;,&quot;guid&quot;:&quot;column-7791&quot;,&quot;editable&quot;:false,&quot;hasCustomHeaderLabel&quot;:false,&quot;customHeaderLabel&quot;:&quot;&quot;,&quot;wrapText&quot;:true,&quot;order&quot;:4,&quot;label&quot;:&quot;Status&quot;,&quot;type&quot;:&quot;text&quot;},{&quot;apiName&quot;:&quot;CreatedDate&quot;,&quot;guid&quot;:&quot;column-871d&quot;,&quot;editable&quot;:false,&quot;hasCustomHeaderLabel&quot;:false,&quot;customHeaderLabel&quot;:&quot;&quot;,&quot;wrapText&quot;:true,&quot;order&quot;:5,&quot;label&quot;:&quot;Created Date&quot;,&quot;type&quot;:&quot;customDateTime&quot;}]</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>maxRowSelection</name>
                <value>
                    <numberValue>1.0</numberValue>
                </value>
            </inputParameters>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>true</isRequired>
            <storeOutputAutomatically>true</storeOutputAutomatically>
        </fields>
        <nextOrFinishButtonLabel>Process Refund</nextOrFinishButtonLabel>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <start>
        <locationX>56</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Get_Order_Payment_Summary_Record</targetReference>
        </connector>
    </start>
    <status>Active</status>
    <variables>
        <name>countOfPaymentRecords</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <scale>0</scale>
        <value>
            <numberValue>0.0</numberValue>
        </value>
    </variables>
    <variables>
        <name>recordId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
</Flow>
